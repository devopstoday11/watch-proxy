
apiVersion: v1
kind: Namespace
metadata:
  name: heptio-qm

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: quartermaster-controller
rules:
- apiGroups:
  - "*"
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: quartermaster-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: quartermaster-controller
subjects:
- kind: ServiceAccount
  name: quartermaster-controller
  namespace: heptio-qm

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: quartermaster-controller
  namespace: heptio-qm

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: quartermaster
  name: quartermaster
  namespace: heptio-qm
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: quartermaster
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: quartermaster
    spec:
      containers:
      - image: docker-test.qa.walmart.com/test/quartermaster:basicauth 
        imagePullPolicy: Always
        name: quartermaster
        resources:
          limits:
            cpu: 150m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/quartermaster
          name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: quartermaster-controller
      serviceAccountName: quartermaster-controller
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: quartermaster
        name: config-volume
---
apiVersion: v1
data:
  config.yaml: |-
    clusterName: "heptio-test-cluster"
    # Minutes quatermaster should remember it previously emitted an object and that object's
    # state at the given time. Specified with seconds (s), minutes (m), or hours (h).
    emitCacheDuration: 14400m
    # Minutes quartermaster should wait before attempting to re-process all objects inside of kubernetes.
    # If state of object during re-upload hasn't changed since last emit (meaning quartermaster still has
    # a cached record, the object will be dropped). This setting relates to client-go's resyncPeriod Setting this value
    # to 0 ensures no forced re-upload occurs. Specified with seconds (s), minutes (m), or hours (h).
    forceReuploadDuration: 500h
    remoteEndpoint:
      type: https
      #region: us-east-2
      url: http://concord.prod.walmart.com/api/v1/events/k8s-auto-ops
      username: vn0a8pr
      password: Walmart1
      jsonType: single
      receiver: k8s-test-qm
    metadata:
      site: test
      profile: dev
      cluster_id: 1234567890
      clusters_seq: c1
    resources:
    - name: deployments
      assetId: deploy
      pruneFields:
      - metadata.resourceVersion
      - metadata.generation
      - status.observedGeneration
    #- name: pods
    #  assetId: pods
    #  pruneFields:
    #  - metadata.creationTimestamp
    #  - metadata.annotations
    #  - metadata.labels.k8s-app
    - name: namespaces
      assetId: namespaces
      pruneFields:
      - metadata.creationTimestamp
      - metadata.annotations.alm-manager
      - metadata.resourceVersion
        #delayAddEventDuration: 30
    - name: services
      assetId: services
      pruneFileds:
      - metadata.creationTimestamp
      - metadata.annotations.alm-manager
      - metadata.resourceVersion
    - name: ingresses
      assetId: ingresses
      pruneFileds:
      - metadata.creationTimestamp
      - metadata.annotations.alm-manager
      - metadata.resourceVersion
kind: ConfigMap
metadata:
  name: quartermaster
  namespace: heptio-qm

